# App must listen to Render's PORT
server.port=${PORT:10000}

# --- JPA ---
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=false

# --- DATABASE ---
# DEMO default: in-memory H2 (data reset hobe free plan sleep/redeploy e)
# Later postgres use korle niche env gula set korlei cholbe;
# ei file e kono code change lagbe na.
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:mem:rentoverse;DB_CLOSE_DELAY=-1;MODE=PostgreSQL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:org.h2.Driver}
spring.h2.console.enabled=false

# --- MAIL (Gmail) ---
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# --- APP SECRETS ---
admin.secret.key=${ADMIN_SECRET_KEY}
app.support.email=${APP_SUPPORT_EMAIL:contact.rentoverse@gmail.com}

# --- FILE UPLOAD LIMITS ---
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# --- RentoBot (Gemini) ---
gemini.api.key=${GEMINI_API_KEY}
gemini.api.url=${GEMINI_API_URL:https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent}

# --- ENV FLAG ---
app.env=prod
